version: '3.8'
services:
  # 1. MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. 用于服务发现和配置的 Nacos
  nacos:
    image: nacos/nacos-server:v2.4.3
    container_name: nacos
    ports:
      - "8848:8848" # Server
      - "9848:9848" # gRPC for clients
      - "9849:9849" # gRPC for client TLS (optional)
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone # 为简单起见，使用单机模式
      - NACOS_AUTH_ENABLE=false # 生产环境请开启认证
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      mysql:
        condition: service_healthy # 确保 MySQL 启动后再启动 Nacos (如果 Nacos 使用外部MySQL)

  # 3. 用于消息传递的 RocketMQ NameServer
  rocketmq-namesrv:
    image: apache/rocketmq:5.1.0
    container_name: rocketmq-namesrv
    ports:
      - "9876:9876" # NameServer port
    command: sh mqnamesrv # 启动 NameServer
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 9876"] # 简单的端口检查
      interval: 10s
      timeout: 5s
      retries: 5

  # 4. 用于消息传递的 RocketMQ Broker
  rocketmq-broker:
    image: apache/rocketmq:5.1.0
    container_name: rocketmq-broker
    ports:
      - "10911:10911" # Broker port
      - "10909:10909" # Slave/Master sync port (important for master/slave or HA)
    environment:
      - NAMESRV_ADDR=rocketmq-namesrv:9876 # 指向 NameServer 服务名和端口
      - BROKER_IP_CONTAINER=rocketmq-broker # 容器内部Broker IP
      - BROKER_IP_FROM_SERVER=true # 让RocketMQ自动检测外部IP，或者手动设置BROKER_IP
      - BROKER_NAME=broker-a # 可以自定义 Broker 名称
    command: sh mqbroker -c /opt/rocketmq/conf/broker.conf
    volumes:
      # 可以选择挂载自定义 broker.conf，如果不需要特殊配置可以省略
      # - ./rocketmq-broker-conf:/opt/rocketmq/conf
      - rocketmq-broker-logs:/home/rocketmq/logs
      - rocketmq-broker-store:/home/rocketmq/store
    depends_on:
      rocketmq-namesrv:
        condition: service_healthy # 确保 NameServer 启动后再启动 Broker
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 10911"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 5. 用于分布式事务的 Seata
  seata-server:
    image: seataio/seata-server:1.7.0
    container_name: seata-server
    ports:
      - "8091:8091" # Transaction Coordinator (TC) port
    environment:
      - SEATA_STORE_MODE=file # 为简单起见，使用文件存储。生产环境通常是db
      # - SEATA_PORT=8091 # 端口
      # - SEATA_IP=0.0.0.0 # 监听所有IP
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091"] # 简单的端口检查，Seata没有健康检查接口
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql-data:
  rocketmq-broker-logs:
  rocketmq-broker-store: